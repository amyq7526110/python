#!/usr/bin/env python3


#  OOP基础


#   基本概念

#   •  类(Class):用来描述具有相同的属性和方法的对象的
#   集合。它定义了该集合中每个对象所共有的属性和方
#   法。对象是类的实例。

#   •  实例化:创建一个类的实例,类的具体对象。
#   •  方法:类中定义的函数。
#   •  对象:通过类定义的数据结构实例。对象包括两个数
#   据成员(类变量和实例变量)和方法。

#   创建类
#   •  使用 class 语句来创建一个新类,class 之后为类的
#   名称并以冒号结尾
#   •  类名建议使用驼峰形式

#   创建实例
#   •  类是蓝图,实例是根据蓝图创建出来的具体对象

#   绑定方法

#   构造器方法
#   •  当实例化类的对象是,构造器方法默认自动调用
#   •  实例本身作为第一个参数,传递给self

# classBearToy: 
#     __init__(self, size, color): 
#         self.size= sizeCentralDir
#         slef.color= color_content(
#  
# if__name__== '__main__': 
#     Ddy= BearToy('small', 'orange') 


#   组合和派生


#   什么是组合
#   •  类被定义后,目标就是要把它当成一个模块来使用,
#   并把这些对象嵌入到你的代码中去
#   •  组合就是让不同的类混合并加入到其它类中来增加功
#   能和代码重用性
#   •  可以在一个大点的类中创建其它类的实例,实现一些
#   其它属性和方法来增强对原来的类对象


