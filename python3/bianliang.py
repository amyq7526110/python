#!/usr/bin/env python3


# 变量作用域

#   全局变量
#   •  标识符的作用域是定义为其声明在程序里的可应用范
#   围,也就是变量的可见性
#   •  在一个模块中最高级别的变量有全局作用域
#   •  全局变量的一个特征是除非被删除掉,否则它们的存
#   活到脚本运行结束,且对于所有的函数,他们的值都
#   是可以被访问的

x = 10

def foo():
    print(x)
foo()


#   局部变量
#   •  局部变量只时暂时地存在,仅仅只依赖于定义它们的
#   函数现阶段是否处于活动
#   •  当一个函数调用出现时,其局部变量就进入声明它们
#   的作用域。在那一刻,一个新的局部变量名为那个对
#   象创建了
#   •  一旦函数完成,框架被释放,变量将会离开作用域

def bar():
    y = 100
    print(y)
bar()                         # 100
# print(y)                      # name 'y' is not defined

#  局部变量(续1)
#  •  如果局部与全局有相同名称的变量,那么函数运行时,
#  局部变量的名称将会把全局变量名称遮盖住


def foo2():
    x = 200
    print(x)
foo2()                        # 200
print(x)                      # 10,函数不能直接修改全局变量的值

#  global语句
#  •  因为全局变量的名字能被局部变量给遮盖掉,所以为
#  了明确地引用一个已命名的全局变量,必须使用
#  global语句


def modify():
    global x
    x = 'nihao'
print(x)             # 10
modify()
print(x)             # 'nihao'


#   名字空间
#   •  任何时候,总有一个到三个活动的作用域(内建、全
#   局和局部)
#   •  标识符的搜索顺序依次是局部、全局和内建
#   •  提到名字空间,可以想像是否有这个标识符
#   •  提到变量作用域,可以想像是否可以“看见”这个标
#   识符


def aaa():
    print(len)
print(aaa)  #  <function aaa at 0x7faa3d64e2f0>
#len=100     
print(aaa)  #  100 




  

